# versão do script
version: '3.9'
#cada service representa um container
services:
#  DB
  dbmysql:
    image: mysql:8.0.29
#    comando executado no container assim que inicializar
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
#      TimeZone
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: admin123
#      usuário que quero criar container MySql
      MYSQL_USER: docker
      MYSQL_PASSWORD: admin123
      MYSQL_DATABASE: pagamentos
#      permissão de hosts que podem conectar nessa instância - todos
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3308
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 10s
      retries: 3
    ports:
      - "3308:3308"
    expose:
      - 3308
    networks:
      - fiap-network
#  aplicação
  pagamentos:
    image: acrdev/ms-pagamento
    restart: always
#    estratégia de build
#    diretório da raíz do projeto para acessar o dockerfile
    build: ./ms-pagamento
    working_dir: /ms-pagamento
    environment:
#      TimeZone
      TZ: America/Sao_Paulo
#      propriedade do spring - application-dev
      SPRING.DATASOURCE.URL: jdbc:mysql://dbmysql:3308/pagamentos?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC
      SPRING.DATASOURCE.USERNAME: root
      SPRING.DATASOURCE.PASSWORD: admin123
    ports:
      - "8080:8080"
#   comando para inicializar a aplicação
    command: mvn spring-boot:run
    depends_on:
      dbmysql:
        condition: service_healthy
    networks:
      - fiap-network
# redes que os serviços vão utilizar
networks:
    fiap-network:
      driver: bridge